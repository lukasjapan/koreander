buildscript {
    ext.kotlinVersion = "1.+"

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id "com.github.kt3k.coveralls" version "2.10.1"
    id "com.jfrog.bintray" version "1.8.5"
}

def koreanderGroup = "de.cvguy.kotlin"
def koreanderName = "koreander"
def koreanderVersion = "0.1.0"

group koreanderGroup
version koreanderVersion

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "jacoco"
apply plugin: "maven"
apply plugin: "com.jfrog.bintray"

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    pkg {
        repo = koreanderGroup
        name = koreanderName
        licenses = ["MIT"]
        vcsUrl = "https://github.com/lukasjapan/koreander.git"
        version {
            name = koreanderVersion
            desc = "A HTML template engine for Kotlin."
        }
    }
    configurations = ["archives"]
}

repositories {
    jcenter()
}

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

coveralls {
    sourceDirs += ["src/main/kotlin"]
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-script-runtime:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-script-util:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.slf4j:slf4j-api:1.+"
    implementation "net.java.dev.jna:jna:+"
    testImplementation "io.kotlintest:kotlintest-runner-junit4:3.4.2"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task runExample(type: JavaExec) {
    main = "de.cvguy.kotlin.ExampleKt"
    classpath = sourceSets["main"].runtimeClasspath
}